local colors = require('cobalt44.utils').colors
local styles = require('cobalt44.utils').styles
local Group = require('cobalt44.utils').Group

Group.new('Type', colors.yellow, nil, nil)
Group.new('StorageClass', colors.light_orange, nil, nil)
Group.new('Structure', colors.dark_blue, nil, styles.italic)
Group.new('Comment', colors.dark_blue, nil, styles.italic)
Group.new('Conditional', colors.dark_orange, nil, nil)
Group.new('Constant', colors.light_green, nil, nil)
Group.new('Character', colors.dark_pink, nil, nil)
Group.new('Number', colors.dark_pink, nil, nil)
Group.new('Boolean', colors.dark_pink, nil, styles.italic)
Group.new('Float', colors.dark_pink, nil, nil)
Group.new('Function', colors.dark_orange, nil, styles.italic)
Group.new('Identifier', colors.dark_orange, nil, nil)
Group.new('Statement', colors.dark_orange, nil, nil)
Group.new('Keyword', colors.light_blue, nil, styles.italic)
Group.new('Label', colors.yellow, nil, nil)
Group.new('Operator', colors.dark_blue, nil, styles.NONE)
Group.new('Exception', colors.light_pink, nil, styles.italic)
Group.new('PreProc', colors.dark_orange, nil, nil)
Group.new('Include', colors.dark_pink, nil, styles.italic)
Group.new('Define', colors.dark_orange, nil, styles.italic)
Group.new('Macro', colors.yellow, nil, nil)
Group.new('Typedef', colors.dark_orange, nil, nil)
Group.new('PreCondit', colors.dark_orange, nil, nil)
Group.new('Repeat', colors.dark_pink, nil, nil)
Group.new('String', colors.light_pink, nil, nil)
Group.new('Special', colors.light_green, nil, nil)
Group.new('SpecialChar', colors.dark_pink, nil, nil)
Group.new('Tag', colors.light_blue, nil, nil)
Group.new('Delimiter', colors.dirty_blue, nil, nil)
Group.new('SpecialComment', colors.light_green, nil, styles.italic)
Group.new('Debug', colors.light_green, nil, styles.italic)
Group.new('Underlined', colors.light_green, nil, styles.underline)
Group.new('Ignore', colors.dark_grey, nil, styles.italic)
Group.new('Error', colors.red:light(), nil, styles.italic)
Group.new('Todo', colors.dark_orange, nil, styles.italic)
